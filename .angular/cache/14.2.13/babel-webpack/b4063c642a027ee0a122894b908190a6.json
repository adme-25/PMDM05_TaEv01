{"ast":null,"code":"import { g as getDocument } from '../shared/ssr-window.esm.mjs';\n/* eslint no-underscore-dangle: \"off\" */\n\n/* eslint no-use-before-define: \"off\" */\n\nfunction Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit,\n    params\n  } = _ref;\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: false,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime();\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  let pausedByPointerEnter;\n\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n\n    if (pausedByPointerEnter || e.detail && e.detail.bySwiperTouchMove) {\n      return;\n    }\n\n    resume();\n  }\n\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n\n  const getSlideDelay = () => {\n    let activeSlideEl;\n\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.find(slideEl => slideEl.classList.contains('swiper-slide-active'));\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    } // eslint-disable-next-line\n\n\n    return delay;\n  };\n\n  const start = () => {\n    autoplayStartTime = new Date().getTime();\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n\n    const proceed = () => {\n      emit('autoplayPause');\n\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n\n    swiper.autoplay.paused = true;\n\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n\n      slideChanged = false;\n      proceed();\n      return;\n    }\n\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pausedByPointerEnter = true;\n    if (swiper.animating || swiper.autoplay.paused) return;\n    pause(true);\n  };\n\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByPointerEnter = false;\n\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n\n  const detachMouseEvents = () => {\n    if (swiper.el && typeof swiper.el !== 'string') {\n      swiper.el.removeEventListener('pointerenter', onPointerEnter);\n      swiper.el.removeEventListener('pointerleave', onPointerLeave);\n    }\n  };\n\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('_freeModeStaticRelease', () => {\n    if (pausedByTouch || pausedByInteraction) {\n      resume();\n    }\n  });\n  on('_freeModeNoMomentumRelease', () => {\n    if (!swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}\n\nexport { Autoplay as default };","map":{"version":3,"names":["g","getDocument","Autoplay","_ref","swiper","extendParams","on","emit","params","autoplay","running","paused","timeLeft","enabled","delay","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","timeout","raf","autoplayDelayTotal","autoplayDelayCurrent","autoplayTimeLeft","autoplayStartTime","Date","getTime","wasPaused","isTouched","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","pausedByPointerEnter","onTransitionEnd","e","destroyed","wrapperEl","target","removeEventListener","detail","bySwiperTouchMove","resume","calcTimeLeft","requestAnimationFrame","getSlideDelay","activeSlideEl","virtual","slides","find","slideEl","classList","contains","activeIndex","undefined","currentSlideDelay","parseInt","getAttribute","run","delayForce","cancelAnimationFrame","Number","isNaN","speed","proceed","isBeginning","loop","rewind","slidePrev","slideTo","length","isEnd","slideNext","cssMode","clearTimeout","setTimeout","start","stop","pause","internal","reset","addEventListener","onVisibilityChange","document","visibilityState","onPointerEnter","pointerType","animating","onPointerLeave","attachMouseEvents","el","detachMouseEvents","attachDocumentEvents","detachDocumentEvents","_s","Object","assign","default"],"sources":["C:/Users/memen/Desktop/2_FP/Prog Multimedia y Disp Moviles/Tareas/PMDM05_TaEv01/node_modules/swiper/modules/autoplay.mjs"],"sourcesContent":["import { g as getDocument } from '../shared/ssr-window.esm.mjs';\n\n/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nfunction Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit,\n    params\n  } = _ref;\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: false,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime();\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  let pausedByPointerEnter;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    if (pausedByPointerEnter || e.detail && e.detail.bySwiperTouchMove) {\n      return;\n    }\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.find(slideEl => slideEl.classList.contains('swiper-slide-active'));\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    autoplayStartTime = new Date().getTime();\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pausedByPointerEnter = true;\n    if (swiper.animating || swiper.autoplay.paused) return;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByPointerEnter = false;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    if (swiper.el && typeof swiper.el !== 'string') {\n      swiper.el.removeEventListener('pointerenter', onPointerEnter);\n      swiper.el.removeEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('_freeModeStaticRelease', () => {\n    if (pausedByTouch || pausedByInteraction) {\n      resume();\n    }\n  });\n  on('_freeModeNoMomentumRelease', () => {\n    if (!swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}\n\nexport { Autoplay as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}